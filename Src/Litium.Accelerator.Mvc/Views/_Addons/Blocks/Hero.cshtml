@using PandoNexis.AddOns.Extensions.Block.HeroBlock
@model HeroBlockViewModel
@{

    var hasBlockImage = Model.BlockImage != null;
    var hasBlockMobileImage = Model.BlockMobileImage != null;
    var hasBlockOverlayImage = Model.BlockOverlayImage != null;

    var narrow = string.Empty;
    if (Model.FullWidth == false)
    {
        narrow = "narrow";
    }
    var overlayImageLeftPosition = string.Empty;
    if (!Model.BlockOverlayLeft)
    {
        overlayImageLeftPosition = "right";
    }
    var extraPadding = string.Empty;
    if (hasBlockOverlayImage && Model.BlockOverlayLeft)
    {
        extraPadding = "extra-padding";
    }
    var quoteStyle = string.Empty;
    if (Model.QuoteStyle == true)
    {
        quoteStyle = "quote-style";
    }
    var heroCenteredTextClass = Model.CenteredText ? "hero-block__centered-text" : "";
}

<div class="hero-block">
    <div class="hero-block__content @narrow @Model.Background">
        <div class="hero-block__text-wrapper @extraPadding @heroCenteredTextClass">
            @if (!string.IsNullOrEmpty(Model.BlockTitle))
            {
                <h2 class="hero-block__text-wrapper__title">@Model.BlockTitle</h2>
            }
            @if (!string.IsNullOrEmpty(Model.BlockTitle2))
            {
                <h2 class="hero-block__text-wrapper__title-alt-color">@Model.BlockTitle2</h2>
            }
            @if (!string.IsNullOrEmpty(Model.BlockSubTitle))
            {
                <h3 class="hero-block__text-wrapper__subtitle">@Model.BlockSubTitle</h3>
            }
            @if (!string.IsNullOrEmpty(Model.BlockText))
            {
                <div class="hero-block__text-wrapper__text @quoteStyle">
                    @Html.Raw(@Model.BlockText)
                </div>
            }
            @if (!string.IsNullOrEmpty(Model.Button.Href) && !string.IsNullOrEmpty(Model.Button.LinkText))
            {
                <div class="hero-block__text-wrapper__button">
                    <a href="@Model.Button.Href" target="@Model.Button.Target" class="button @Model.Button.Class">@Model.Button.LinkText</a>
                </div>
            }
        </div>
        @if (hasBlockImage)
        {
            <div class="hero-block__image-wrapper @narrow @(hasBlockMobileImage?"hero-block__mobile--hide":"")">
            @if (Model.GradiantOverlay)
            {
                <div class="overlay"></div>
            }
                @Html.ImageFor(x => Model.BlockImage, renderSizeAttributes:true)
        </div>
        }
        @if (hasBlockMobileImage)
        {
        <div class="hero-block__image-wrapper-mobile @narrow">
            @if (Model.GradiantOverlay)
            {
                <div class="overlay"></div>
            }
                @Html.ImageFor(x => Model.BlockMobileImage, renderSizeAttributes:true)
        </div>
        }
        @if (hasBlockOverlayImage)
        {
        <div class="hero-block__image @overlayImageLeftPosition">
                @Html.ImageFor(x => Model.BlockOverlayImage, renderSizeAttributes:true)
        </div>
        }
    </div>
</div>