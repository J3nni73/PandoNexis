{"version":3,"sources":["webpack:///./Scripts/_Addons/MediaCatalog/Actions/MediaCatalog.action.js","webpack:///./Scripts/_Addons/MediaCatalog/Components/Breadcrumbs.js","webpack:///./Scripts/_Addons/MediaCatalog/Components/GridView.js","webpack:///./Scripts/_Addons/MediaCatalog/Components/ListView.js","webpack:///./Scripts/_Addons/MediaCatalog/Components/Search.js","webpack:///./Scripts/_Addons/MediaCatalog/Icons/folder_fill.svg","webpack:///./Scripts/_Addons/MediaCatalog/Icons/folder_open_fill.svg","webpack:///./Scripts/_Addons/MediaCatalog/Components/MediaCatalogContainer.js"],"names":["loadError","error","dispatch","getState","toggleGenericLoader","type","MEDIA_CATALOG_LOAD","payload","fillMediaStructure","response","fileStructure","currentStructure","breadcrumbClick","className","length","map","folder","breadcrumbIndex","key","onClick","folderName","currentFolder","allowedImageExtensions","formatFileSize","files","translate","file","indexFile","href","downloadUrl","extension","Fragment","findIndex","x","toLowerCase","src","largeThumbnailUrl","alt","name","loading","frameWidth","frameHeight","fileSize","mediumThumbnailUrl","_path","filterItems","searchRef","useRef","useState","searchQuery","setSearchQuery","componentLoaded","setComponentLoaded","activeSearchQuery","setActiveSearchQuery","search","useEffect","current","value","onChange","e","event","newValue","target","checkSearchQuery","onKeyPress","charCode","onKeyUp","ref","placeholder","_extends","Object","assign","bind","i","arguments","source","prototype","hasOwnProperty","call","apply","this","props","xmlns","height","width","d","mediaFolderId","alternativeFolderName","useAltMediaView","useDispatch","setCurrentFolder","firstFolderName","useAlternativeFolderView","viewType","setViewType","setCurrentStructure","fuse","setFuse","useSelector","state","mediaCatalog","updateStructure","obj","folderIndexTo","folderData","slice","clearStructure","Math","floor","toString","formatNumber","numb","toFixed","replace","get","rootRoute","then","json","catch","ex","catchError","getMediaCatalogData","constructFlatFileArray","index","push","parentName","concat","filesArray","Fuse","keys","threshold","distance","trim","q","result","item","newStructure"],"mappings":"4YAqBaA,EAAY,SAACC,GAAD,OAAW,SAACC,EAAUC,GAE3C,OADAD,GAASE,QAAoB,IACtBF,EAAS,CACZG,KAAMC,IACNC,QAAS,CACLN,aAKCO,EAAqB,SAACC,GAAD,OAAc,SAACP,GAE7C,OADAA,GAASE,QAAoB,IACtBF,EAAS,CACZG,KAAMC,IACNC,QAAS,CACLG,cAAeD,O,oBChB3B,EAlBoB,SAAC,GAGf,IAFFE,EAEE,EAFFA,iBACAC,EACE,EADFA,gBAEA,OAAKD,EAID,uBAAKE,UAAU,6BACVF,GAAoBA,EAAiBG,OAAS,GAAKH,EAAiBI,KAAI,SAACC,EAAQC,GAC9E,OACI,wBAAMC,IAAG,kCAA6BD,GAAmBE,QAAS,kBAAMP,EAAgBI,KAAUA,EAAOI,gBAN9G,M,mBCgDf,EAnDiB,SAAC,GAIZ,IAHFC,EAGE,EAHFA,cACAC,EAEE,EAFFA,uBACAC,EACE,EADFA,eAEA,OAAKF,IAAkBA,EAAcG,OAASH,EAAcG,MAAMV,OAAS,EAChE,KAEP,uBAAKD,UAAS,yFACRQ,EAAcG,OAASH,EAAcG,MAAMV,OAAS,GAClD,wBAAMD,UAAU,4BAA2BY,OAAU,qCAExDJ,GAAiBA,EAAcG,OAASH,EAAcG,MAAMV,OAAS,GAAKO,EAAcG,MAAMT,KAAI,SAACW,EAAMC,GACtG,OACI,gBAAC,IAAD,CAAQd,UAAS,SAAYK,IAAG,oCAA+BS,IAC3D,uBAAKd,UAAU,6BACX,8BACI,uBAAKA,UAAU,WACX,qBAAGe,KAAMF,EAAKG,aACTH,EAAKI,WACF,gBAAC,EAAAC,SAAD,KACKL,EAAKI,WACF,uBAAKjB,UAAU,sCAAf,IAAsDa,EAAKI,WAE9DJ,GAAQA,EAAKI,YAA4F,IAA/ER,EAAuBU,WAAU,SAAAC,GAAC,OAAIA,IAAMP,EAAKI,UAAUI,iBACjF,uBAAKC,IAAKT,EAAKU,kBAAmBC,IAAKX,EAAKY,KAAMC,QAAQ,SAC1D,uBAAK1B,UAAS,mDAA8Ca,EAAKI,UAAUI,oBAKhG,kCACI,2BAAKT,OAAU,6BACf,sBAAIZ,UAAU,4BACV,2BAAKY,OAAU,qCAAf,KAAsD,4BAAOC,EAAKY,OAClE,2BAAKb,OAAU,sCAAf,KAAuD,4BAAOC,EAAKc,WAAZ,OACvD,2BAAKf,OAAU,uCAAf,KAAwD,4BAAOC,EAAKe,YAAZ,OACxD,2BAAKhB,OAAU,yCAAf,KAA0D,4BAAOF,EAAeG,EAAKgB,YACrF,2BAAKjB,OAAU,8CAAf,KAA+D,4BAAOC,EAAKI,sBCSnH,EA/CiB,SAAC,GAIZ,IAHFT,EAGE,EAHFA,cACAC,EAEE,EAFFA,uBACAC,EACE,EADFA,eAEA,OAAKF,IAAkBA,EAAcG,OAASH,EAAcG,MAAMV,OAAS,EAC/D,wBAAMD,UAAU,4BAA2BY,OAAU,qCAE7D,gBAAC,EAAAM,SAAD,KACI,uBAAKlB,UAAU,mCACX,uBAAKA,UAAU,6BAAf,KACA,uBAAKA,UAAU,6BAAf,eACA,uBAAKA,UAAU,6BAAf,aACA,uBAAKA,UAAU,6BAAf,kBACA,uBAAKA,UAAU,6BAAf,MAEJ,gBAAC,IAAD,CAAQA,UAAU,6BACbQ,GAAiBA,EAAcG,OAASH,EAAcG,MAAMV,OAAS,GAAKO,EAAcG,MAAMT,KAAI,SAACW,EAAMC,GACtG,OACI,uBAAKd,UAAS,+BAAkCK,IAAG,+BAA0BS,IACzE,uBAAKd,UAAU,wDACX,8BACKa,GAAQA,EAAKI,YAA4F,IAA/ER,EAAuBU,WAAU,SAAAC,GAAC,OAAIA,IAAMP,EAAKI,UAAUI,iBACjF,uBAAKC,IAAKT,EAAKiB,mBAAoBN,IAAKX,EAAKY,KAAMC,QAAQ,SAC3D,uBAAK1B,UAAS,8EAAyEa,EAAKI,UAAUI,mBAInH,uBAAKrB,UAAU,6DACX,sBAAIA,UAAU,4BACV,2BAAKY,OAAU,qCAAf,KAAsD,4BAAOC,EAAKY,OAClE,2BAAKb,OAAU,sCAAf,KAAuD,4BAAOC,EAAKc,WAAZ,OACvD,2BAAKf,OAAU,uCAAf,KAAwD,4BAAOC,EAAKe,YAAZ,SAGhE,uBAAK5B,UAAU,4DAA4DU,EAAeG,EAAKgB,WAC/F,uBAAK7B,UAAU,4DAA4Da,EAAKI,UAAUI,eAC1F,uBAAKrB,UAAU,qEAAoE,qBAAGe,KAAMF,EAAKG,cAAcJ,OAAU,gD,u8BCtCrJ,ICHImB,ED2DJ,EAxDe,SAAC,GAAoB,IAAlBC,EAAkB,EAAlBA,YAERC,GAAYC,cAFc,KAGMC,cAAS,IAHf,GAGzBC,EAHyB,KAGZC,EAHY,UAIcF,eAAS,GAJvB,GAIzBG,EAJyB,KAIRC,EAJQ,UAKkBJ,cAAS,IAL3B,GAKzBK,EALyB,KAKNC,EALM,KAM1BC,EAAS,WACXD,EAAqBL,GACrBJ,EAAYI,IA2BhB,OATAO,gBAAU,WACDH,GAAkD,KAA7BA,EAAkBvC,SACpCqC,IACAL,EAAUW,QAAQC,MAAQ,GAC1BH,KAEJH,GAAmB,MAExB,CAACC,IAEA,gBAAC,EAAAtB,SAAD,KACI,uBAAKlB,UAAU,uCACVwC,GACG,uBAAKlC,QAAS,WAAQ+B,EAAe,IAAKI,EAAqB,OAAQ7B,OAAU,0CAAjF,KAA6H,yBAAI4B,KAGzI,uBAAKxC,UAAU,yBACX,yBAAOR,KAAK,SAASsD,SAAU,SAACC,GAAD,OA3BlB,SAACC,GACtB,IAAIC,EAAWD,EAAME,OAAOL,MAE5B,GADAR,EAAeY,IACVA,GAAYA,EAAShD,OAAS,GAAKmC,EAGpC,OAFAC,EAAe,SACfI,EAAqB,IAsBqBU,CAAiBJ,IAAIK,WAAY,SAACJ,GAAD,OAjCnE,SAACA,GACK,UAAdA,EAAM3C,KAAsC,KAAnB2C,EAAMK,UAC/BX,IA+BsFY,CAAQN,IAAQO,IAAKtB,EAAWuB,aAAc5C,OAAU,4CAC1I,uBAAKZ,UAAS,uCAAmCoC,EAAyD,GAA3C,0CAAiD9B,QAAS,SAACyC,GAAD,OAAOL,OAAW9B,OAAU,yCC9CrK,SAAS6C,IAAiS,OAApRA,EAAWC,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAUV,GAAU,IAAK,IAAIW,EAAI,EAAGA,EAAIC,UAAU7D,OAAQ4D,IAAK,CAAE,IAAIE,EAASD,UAAUD,GAAI,IAAK,IAAIxD,KAAO0D,EAAcL,OAAOM,UAAUC,eAAeC,KAAKH,EAAQ1D,KAAQ6C,EAAO7C,GAAO0D,EAAO1D,IAAY,OAAO6C,IAA2BiB,MAAMC,KAAMN,WAStU,ICVI,EDUJ,EAPsBO,GAAsB,gBAAoB,MAAOZ,EAAS,CAC9Ea,MAAO,6BACPC,OAAQ,GACRC,MAAO,IACNH,GAAQtC,IAAUA,EAAqB,gBAAoB,OAAQ,CACpE0C,EAAG,oKCPL,SAAS,IAAiS,OAApR,EAAWf,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAUV,GAAU,IAAK,IAAIW,EAAI,EAAGA,EAAIC,UAAU7D,OAAQ4D,IAAK,CAAE,IAAIE,EAASD,UAAUD,GAAI,IAAK,IAAIxD,KAAO0D,EAAcL,OAAOM,UAAUC,eAAeC,KAAKH,EAAQ1D,KAAQ6C,EAAO7C,GAAO0D,EAAO1D,IAAY,OAAO6C,IAA2BiB,MAAMC,KAAMN,WAStU,MAP0BO,GAAsB,gBAAoB,MAAO,EAAS,CAClFC,MAAO,6BACPC,OAAQ,GACRC,MAAO,IACNH,GAAQ,IAAU,EAAqB,gBAAoB,OAAQ,CACpEI,EAAG,4K,48DCML,IAgMA,EAhM8B,SAAC,GAIzB,IAHFC,EAGE,EAHFA,cACAC,EAEE,EAFFA,sBACAC,EACE,EADFA,gBAEMvF,GAAWwF,UADf,KAEwC1C,cAAS,IAFjD,GAEK3B,EAFL,KAEoBsE,EAFpB,UAG4C3C,cAASwC,GAHrD,GAGKI,EAHL,gBAI8D5C,cAASyC,GAJvE,IAIKI,EAJL,gBAK8B7C,cAAS,QALvC,IAKK8C,EALL,KAKeC,EALf,UAM8C/C,cAAS,IANvD,GAMKrC,EANL,KAMuBqF,EANvB,UAOsBhD,cAAS,MAP/B,GAOKiD,EAPL,KAOWC,EAPX,KASMxF,GAAkByF,SACtB,SAACC,GAAD,OAAWA,EAAMC,gBADb3F,cAGF4F,EAAkB,SAAClF,GACrB,IAAMmF,EAAM,CAAEnF,cACd4E,EAAoB,GAAD,SAAKrF,GAAL,CAAuB4F,MAExCjF,EAAyB,CAAC,MAAO,OAAQ,MAAO,MAAO,OAAQ,OAC/DV,EAAkB,SAACI,GACrB,IAAIwF,EAAgB7F,EAAiBqB,WAAU,SAAAC,GAAC,OAAIA,EAAEb,YAAcJ,EAAOI,cACvEoF,SAAyDA,EAAgB,IAIzEb,EADkB,IAAlBa,EACiB9F,EAGAA,EAAc+F,WAAWD,EAAgB,IAI9DR,EAAoBrF,EAAiB+F,MAAM,EAAGF,EAAgB,MAG5DG,EAAiB,WACnB,IAAMJ,EAAM,CAAEnF,WAAYwE,GAAmBlF,EAAcU,YAC3D4E,EAAoB,CAACO,KAGnBhF,EAAiB,SAACmB,GACpB,IAAKA,EACD,MAAO,GAEX,OADakE,KAAKC,OAAOnE,EAASoE,WAAWhG,OAAS,GAAK,IAEvD,KAAK,EACL,KAAK,EACD,OAAOiG,EAAarE,EAAW,KAAQ,KAE3C,KAAK,EACD,OAAOqE,EAAarE,EAAW,KAAW,KAE9C,KAAK,EACD,OAAOqE,EAAarE,EAAW,KAAc,KAKrD,MAAO,IAELqE,EAAe,SAACC,GAClB,OAAOA,EAAKC,QAAQ,GAAGC,QAAQ,MAAO,MAuB1C1D,gBAAU,WACF+B,GACArF,EP7FuB,SAACqF,GAAD,OAAmB,SAACrF,EAAUC,GAK7D,OAFAD,GAASE,QAAoB,KAEtB+G,QAAIC,2CAAuC7B,GAC7C8B,MAAK,SAAC5G,GAAD,OAAcA,EAAS6G,UAC5BD,MAAK,SAAC5G,GAAD,OAAcP,EAASM,EAAmBC,OAC/C8G,OAAM,SAACC,GAAD,OAAQtH,GAASuH,OAAWD,GAAI,SAACvH,GAAD,OAAWD,EAAUC,WOqF/CyH,CAAoBnC,MAElC,IAEH,IAAMoC,EAAyB,SAAzBA,EAA0BpB,GAC5B,IAAI/E,EAAQ,GAcZ,OAbI+E,IACIA,EAAI/E,OACJ+E,EAAI/E,MAAMT,KAAI,SAACW,EAAMkG,GACjBpG,EAAMqG,KAAN,OAAgBnG,GAAhB,IAAsBoG,WAAYvB,EAAIuB,iBAI1CvB,EAAIE,YACJF,EAAIE,WAAW1F,KAAI,SAACC,EAAQ4G,GACxBpG,EAAQA,EAAMuG,OAAOJ,EAAuB3G,QAIjDQ,GA0BX,OAvBAgC,gBAAU,WACN,GAAI9C,EAAe,CACfiF,EAAiBjF,GAEbA,EAAcU,YAEduF,IAIJ,IAAMqB,EAAaL,EAAuBjH,GAG1CwF,EAAQ,IAAI+B,IAAKD,EAAY,CACzBE,KAAM,CACF,OACA,aAEJC,UAAW,GACXC,SAAU,SAGnB,CAAC1H,IAEA,uBAAKG,UAAU,iBACX,uBAAKA,UAAU,0CACX,2BAASA,UAAU,oBAAmB,gBAAC,EAAD,CAAQgC,YAtEtC,SAACI,GAEjB,GADA0D,IACK1D,GAA6C,KAA9BA,EAAYoF,OAAOvH,QAIvC,GAAImF,EAAM,CACN,IAAMqC,EAAIrF,EAAYoF,OAChBE,EAAStC,EAAK1C,OAAO+E,GAC3B,GAAIC,EAAQ,CACR,IAAM/G,EAAQ+G,EAAOxH,KAAI,SAAA6C,GAAC,OAAIA,EAAE4E,QAC1BC,EAAe,CACjBrH,WAAYwE,GAAmBlF,EAAcU,WAC7CI,SAEJmE,EAAiB8C,UAZrB9C,EAAiBjF,OAoEb,2BAASG,UAAU,oBAAmB,gBAAC,EAAD,CAAaF,iBAAkBA,EAAkBC,gBAAiBA,MAE3GS,EAAcoF,YACX,uBAAK5F,UAAU,wCACX,uBAAKA,UAAS,sDAAiDgF,EAA2B,oCAAsC,KAExHxE,EAAcoF,YAAcpF,EAAcoF,WAAW3F,OAAS,GAAKO,EAAcoF,WAAW1F,KAAI,SAACC,EAAQ4G,GACrG,OAAK/B,EAWD,uBAAKhF,UAAU,SAASK,IAAG,8BAAyB0G,IAChD,2BACI,uBAAK/G,UAAS,UAAaM,QAAS,WAAQwE,EAAiB3E,GAASsF,EAAgBtF,EAAOI,cACzF,uBAAKP,UAAU,mCACVG,EAAOI,YAEZ,uBAAKP,UAAU,8BAAf,aAfR,uBAAKA,UAAU,0BAA0BK,IAAG,8BAAyB0G,GAASzG,QAAS,WAAQwE,EAAiB3E,GAASsF,EAAgBtF,EAAOI,cAC5I,uBAAKP,UAAU,8BACX,gBAAC,EAAD,CAAYwE,MAAM,KAAKD,OAAO,KAAKvE,UAAU,0EAA0EwB,KAAKZ,OAAU,uCACtI,gBAAC,EAAD,CAAgB4D,MAAM,KAAKD,OAAO,KAAKvE,UAAU,wEAAwEwB,KAAKZ,OAAU,4CAE5I,uBAAKZ,UAAU,mCAAmCG,EAAOI,kBAoBxFV,EAAcc,OACX,2BAASX,UAAS,UAAKiF,EAAL,UACd,uBAAKjF,UAAU,OACX,sBAAIA,UAAU,qDACV,uBAAKA,UAAU,+BAA8B,wBAAMA,UAAS,2CAAmD,SAAbiF,EAAsB,2CAA6C,IAAM3E,QAAS,kBAAM4E,EAAY,WAAgB,wBAAMlF,UAAS,2CAAmD,SAAbiF,EAAsB,2CAA6C,IAAM3E,QAAS,kBAAM4E,EAAY,YAE3WpF,GAAoBA,EAAiBG,OAAS,GAC9C,wBAAMD,UAAU,kCAAkCM,QAAS,kBAAMP,EAAgBD,EAAiBA,EAAiBG,OAAS,OAAMW,OAAU,+CAJpJ,oBAMqB,4BAAmC,IAA5Bd,EAAiBG,OAAgB8E,GAAmBlF,EAAcU,WAAcC,EAAcD,cAEhH,SAAb0E,EACI,gBAAC,EAAD,CAAUzE,cAAeA,EAAeC,uBAAwBA,EAAwBC,eAAgBA,IAExG,gBAAC,EAAD,CAAUF,cAAeA,EAAeC,uBAAwBA,EAAwBC,eAAgBA","file":"431.e08a17fbfb566b96767f.js","sourcesContent":["import { get, post } from '../../../Services/http';\r\nimport { getURLSearchParams } from '../../../_PandoNexis/Services/url';\r\nimport { catchError } from '../../../Actions/Error.action';\r\nimport { toggleGenericLoader } from '../../../_PandoNexis/Actions/GenericLoader.action';\r\n\r\nimport { MEDIA_CATALOG_LOAD, MEDIA_CATALOG_ERROR } from '../constants';\r\n\r\nconst rootRoute = '/api/mediacatalog/';\r\n\r\nexport const getMediaCatalogData = (mediaFolderId) => (dispatch, getState) => {\r\n\r\n    let pagenationActive = false;\r\n    dispatch(toggleGenericLoader(true));\r\n\r\n    return get(rootRoute + `getMediaData?folderId=` + mediaFolderId)\r\n        .then((response) => response.json())\r\n        .then((response) => dispatch(fillMediaStructure(response)))\r\n        .catch((ex) => dispatch(catchError(ex, (error) => loadError(error))));\r\n};\r\n\r\n\r\nexport const loadError = (error) => (dispatch, getState) => {\r\n    dispatch(toggleGenericLoader(false));\r\n    return dispatch({\r\n        type: MEDIA_CATALOG_LOAD,\r\n        payload: {\r\n            error,\r\n        },\r\n    });\r\n};\r\n\r\nexport const fillMediaStructure = (response) => (dispatch) =>{\r\n    dispatch(toggleGenericLoader(false));\r\n    return dispatch({\r\n        type: MEDIA_CATALOG_LOAD,\r\n        payload: {\r\n            fileStructure: response,\r\n        },\r\n    });\r\n};\r\n\r\n\r\nexport const clearRows = () => {\r\n    return {\r\n        type: MEDIA_CATALOG_LOAD,\r\n        payload: {\r\n            dataRows: [],\r\n        },\r\n    };\r\n};\r\n\r\nexport const updateAllRows = (rows) => {\r\n    return {\r\n        type: MEDIA_CATALOG_LOAD,\r\n        payload: {\r\n            dataRows: rows,\r\n        },\r\n    };\r\n};\r\n","import React from 'react';\r\n\r\nconst Breadcrumbs = ({\r\n    currentStructure,\r\n    breadcrumbClick\r\n}) => {\r\n    if (!currentStructure)\r\n        return null;\r\n\r\n    return (\r\n        <div className=\"media-catalog__breadcrumb\">\r\n            {currentStructure && currentStructure.length > 0 && currentStructure.map((folder, breadcrumbIndex) => {\r\n                return (\r\n                    <span key={`media-folder__breadcrumb${breadcrumbIndex}`} onClick={() => breadcrumbClick(folder)}>{folder.folderName}</span>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Breadcrumbs;","import React, { Fragment } from 'react';\r\nimport FadeIn from 'react-fade-in';\r\nimport { translate } from '../../../Services/translation';\r\n\r\nconst GridView = ({\r\n    currentFolder,\r\n    allowedImageExtensions,\r\n    formatFileSize\r\n}) => {\r\n    if (!currentFolder || !currentFolder.files || currentFolder.files.length < 1)\r\n        return null;\r\n    return (\r\n        <div className={`row media-catalog__files small-up-2 medium-up-4 large-up-6 align-center align-middle`}>\r\n            {!currentFolder.files || currentFolder.files.length < 1 &&\r\n                <span className=\"media-catalog__no-files\">{translate('addons.mediacatalog.nofilesfound')}</span>\r\n            }\r\n            {currentFolder && currentFolder.files && currentFolder.files.length > 0 && currentFolder.files.map((file, indexFile) => {\r\n                return (\r\n                    <FadeIn className={`column`} key={`media-catalog__folder-Grid${indexFile}`}>\r\n                        <div className=\"media-catalog__files-card\">\r\n                            <figure>\r\n                                <div className=\"pn-card\">\r\n                                    <a href={file.downloadUrl}>\r\n                                        {file.extension &&\r\n                                            <Fragment>\r\n                                                {file.extension &&\r\n                                                    <div className=\"media-catalog__files-tag-extension\"> {file.extension}</div>\r\n                                                }\r\n                                                {file && file.extension && allowedImageExtensions.findIndex(x => x === file.extension.toLowerCase()) !== -1 ?\r\n                                                    (<img src={file.largeThumbnailUrl} alt={file.name} loading=\"lazy\" />) :\r\n                                                    (<div className={`media-catalog__file media-catalog__file--${file.extension.toLowerCase()}`}></div>)\r\n                                                }\r\n                                            </Fragment>\r\n                                        }</a>\r\n                                </div>\r\n                                <figcaption>\r\n                                    <h4>{translate('addons.mediacatalog.info')}</h4>\r\n                                    <ul className=\"media-catalog__file-data\">\r\n                                        <li>{translate('addons.mediacatalog.fileinfo.name')}: <span>{file.name}</span></li>\r\n                                        <li>{translate('addons.mediacatalog.fileinfo.width')}: <span>{file.frameWidth}px</span></li>\r\n                                        <li>{translate('addons.mediacatalog.fileinfo.height')}: <span>{file.frameHeight}px</span></li>\r\n                                        <li>{translate('addons.mediacatalog.fileinfo.filesize')}: <span>{formatFileSize(file.fileSize)}</span></li>\r\n                                        <li>{translate('addons.mediacatalog.fileinfo.fileextension')}: <span>{file.extension}</span></li>\r\n                                    </ul>\r\n                                </figcaption>\r\n                            </figure>\r\n                        </div>\r\n                    </FadeIn>\r\n                )\r\n            }\r\n            )}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default GridView;\r\n\r\n","import React, { Fragment } from 'react';\r\nimport FadeIn from 'react-fade-in';\r\nimport { translate } from '../../../Services/translation';\r\n\r\nconst ListView = ({\r\n    currentFolder,\r\n    allowedImageExtensions,\r\n    formatFileSize\r\n}) => {\r\n    if (!currentFolder || !currentFolder.files || currentFolder.files.length < 1)\r\n        return (<span className=\"media-catalog__no-files\">{translate('addons.mediacatalog.nofilesfound')}</span>);\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row media-catalog__table-header\">\r\n                <div className=\"small-12 medium-2 columns\">&nbsp;</div>\r\n                <div className=\"small-12 medium-4 columns\">Description</div>\r\n                <div className=\"small-12 medium-2 columns\">File size</div>\r\n                <div className=\"small-12 medium-2 columns\">File extension</div>\r\n                <div className=\"small-12 medium-2 columns\">&nbsp;</div>\r\n            </div>\r\n            <FadeIn className=\"media-catalog__table-data\">\r\n                {currentFolder && currentFolder.files && currentFolder.files.length > 0 && currentFolder.files.map((file, indexFile) => {\r\n                    return (\r\n                        <div className={`row media-catalog__table-row`} key={`media-catalog__folder${indexFile}`}>\r\n                            <div className=\"small-12 medium-2 columns media-catalog__table-image\">\r\n                                <figure>\r\n                                    {file && file.extension && allowedImageExtensions.findIndex(x => x === file.extension.toLowerCase()) !== -1 ?\r\n                                        (<img src={file.mediumThumbnailUrl} alt={file.name} loading=\"lazy\" />) :\r\n                                        (<div className={`media-catalog__file media-catalog__file--small media-catalog__file--${file.extension.toLowerCase()}`}></div>)\r\n                                    }\r\n                                </figure>\r\n                            </div>\r\n                            <div className=\"small-12 medium-4 columns media-catalog__table-decription\">\r\n                                <ul className=\"media-catalog__file-data\">\r\n                                    <li>{translate('addons.mediacatalog.fileinfo.name')}: <span>{file.name}</span></li>\r\n                                    <li>{translate('addons.mediacatalog.fileinfo.width')}: <span>{file.frameWidth}px</span></li>\r\n                                    <li>{translate('addons.mediacatalog.fileinfo.height')}: <span>{file.frameHeight}px</span></li>\r\n                                </ul>\r\n                            </div>\r\n                            <div className=\"small-12 medium-2 columns media-catalog__table-file-type\">{formatFileSize(file.fileSize)}</div>\r\n                            <div className=\"small-12 medium-2 columns media-catalog__table-file-size\">{file.extension.toLowerCase()}</div>\r\n                            <div className=\"small-12 medium-2 columns media-catalog__table-button text--right\"><a href={file.downloadUrl}>{translate('addons.mediacatalog.button.download')}</a></div>\r\n                        </div>\r\n                    )\r\n                }\r\n                )}\r\n            </FadeIn>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default ListView;\r\n\r\n","import React, { Fragment, useEffect, useState, useRef } from 'react';\r\nimport { translate } from '../../../Services/translation';\r\n\r\nconst Search = ({ filterItems }) => {\r\n\r\n    const searchRef = useRef();\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [componentLoaded, setComponentLoaded] = useState(false);\r\n    const [activeSearchQuery, setActiveSearchQuery] = useState('');\r\n    const search = () => {\r\n        setActiveSearchQuery(searchQuery);\r\n        filterItems(searchQuery);\r\n    };\r\n    const onKeyUp = (event) => {\r\n        if (event.key === \"Enter\" || event.charCode === 13) {\r\n            search();\r\n        }\r\n    };\r\n\r\n    const checkSearchQuery = (event) => {\r\n        var newValue = event.target.value;\r\n        setSearchQuery(newValue);\r\n        if (!newValue || newValue.length < 1 && searchQuery) {\r\n            setSearchQuery('');\r\n            setActiveSearchQuery('');\r\n            return;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!activeSearchQuery || activeSearchQuery.length === '') {\r\n            if (componentLoaded) {\r\n                searchRef.current.value = '';\r\n                search();\r\n            }\r\n            setComponentLoaded(true);\r\n        }\r\n    }, [activeSearchQuery]);\r\n    return (\r\n        <Fragment>\r\n            <div className=\"media-catalog__search-filter-remove\">\r\n                {activeSearchQuery &&\r\n                    <div onClick={() => { setSearchQuery(''), setActiveSearchQuery('') }}>{translate('addons.mediacatalog.removeactivesearch')}: <i>{activeSearchQuery}</i></div>\r\n                }\r\n            </div>\r\n            <div className=\"media-catalog__search\">\r\n                <input type=\"search\" onChange={(e) => checkSearchQuery(e)} onKeyPress={(event) => onKeyUp(event)} ref={searchRef} placeholder={ translate('addons.mediacatalog.searchforfilestext') } />\r\n                <div className={`media-catalog__search-button ${!searchQuery ? 'media-catalog__search-button--disabled' : ''}`} onClick={(e) => search()}>{translate('addons.mediacatalog.button.search')}</div>\r\n\r\n                {/*false && currentStructure && currentStructure.length > 0 && currentStructure.map((folder, breadcrumbIndex) => {\r\n                return (\r\n                    <span key={`media-folder__breadcrumb${breadcrumbIndex}`} onClick={() => breadcrumbClick(folder)}>{folder.folderName}</span>\r\n                )\r\n            })*/}\r\n            </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default Search;\r\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nconst SvgFolderFill = props => /*#__PURE__*/React.createElement(\"svg\", _extends({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  height: 48,\n  width: 48\n}, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M7.05 40q-1.2 0-2.1-.925-.9-.925-.9-2.075V11q0-1.15.9-2.075Q5.85 8 7.05 8h14l3 3h17q1.15 0 2.075.925.925.925.925 2.075v23q0 1.15-.925 2.075Q42.2 40 41.05 40Z\"\n})));\nexport default SvgFolderFill;","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nconst SvgFolderOpenFill = props => /*#__PURE__*/React.createElement(\"svg\", _extends({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  height: 48,\n  width: 48\n}, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M7 40q-1.15 0-2.075-.925Q4 38.15 4 37V11q0-1.15.925-2.075Q5.85 8 7 8h14.05l3 3H41q1.15 0 2.075.925Q44 12.85 44 14H7v23l5.1-20H47l-5.35 20.7q-.3 1.2-1.1 1.75T38.5 40Z\"\n})));\nexport default SvgFolderOpenFill;","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getMediaCatalogData } from '../Actions/MediaCatalog.action';\r\nimport Fuse from 'fuse.js'\r\n\r\nimport { translate } from '../../../Services/translation';\r\n\r\nimport Breadcrumbs from './Breadcrumbs';\r\nimport GridView from './GridView';\r\nimport ListView from './ListView';\r\nimport Search from './Search';\r\nimport FolderIcon from '../Icons/folder_fill.svg?component';\r\nimport FolderOpenIcon from '../Icons/folder_open_fill.svg?component';\r\n\r\nconst MediaCatalogContainer = ({\r\n    mediaFolderId,\r\n    alternativeFolderName,\r\n    useAltMediaView\r\n}) => {\r\n    const dispatch = useDispatch();\r\n    const [currentFolder, setCurrentFolder] = useState({});\r\n    const [firstFolderName, setFirstFolderName] = useState(alternativeFolderName);\r\n    const [useAlternativeFolderView, setUseAlternativeFolderView] = useState(useAltMediaView);\r\n    const [viewType, setViewType] = useState('grid');\r\n    const [currentStructure, setCurrentStructure] = useState([]);\r\n    const [fuse, setFuse] = useState(null);\r\n\r\n    const { fileStructure } = useSelector(\r\n        (state) => state.mediaCatalog\r\n    );\r\n    const updateStructure = (folderName) => {\r\n        const obj = { folderName };\r\n        setCurrentStructure([...currentStructure, obj]);\r\n    };\r\n    const allowedImageExtensions = [\"jpg\", \"jpeg\", \"png\", \"gif\", \"webp\", \"svg\"];\r\n    const breadcrumbClick = (folder) => {\r\n        var folderIndexTo = currentStructure.findIndex(x => x.folderName == folder.folderName);\r\n        if (folderIndexTo === null || folderIndexTo === undefined || folderIndexTo < 0) {\r\n            return;\r\n        }\r\n        if (folderIndexTo === 0) {\r\n            setCurrentFolder(fileStructure);\r\n        }\r\n        else {\r\n            setCurrentFolder(fileStructure.folderData[folderIndexTo - 1]);\r\n        }\r\n\r\n        // Set breadcrumbs\r\n        setCurrentStructure(currentStructure.slice(0, folderIndexTo + 1));\r\n    };\r\n\r\n    const clearStructure = () => {\r\n        const obj = { folderName: firstFolderName || fileStructure.folderName };\r\n        setCurrentStructure([obj]);\r\n    };\r\n\r\n    const formatFileSize = (fileSize) => {\r\n        if (!fileSize)\r\n            return '';\r\n        const type = Math.floor((fileSize.toString().length - 1) / 3);\r\n        switch (type) {\r\n            case 0:\r\n            case 1:\r\n                return formatNumber(fileSize / 1000) + \"KB\";\r\n                break\r\n            case 2:\r\n                return formatNumber(fileSize / 1000000) + \"MB\";\r\n                break\r\n            case 3:\r\n                return formatNumber(fileSize / 1000000000) + \"TB\";\r\n                break;\r\n            default: break\r\n        }\r\n\r\n        return '';\r\n    }\r\n    const formatNumber = (numb) => {\r\n        return numb.toFixed(2).replace('.00', '');\r\n    };\r\n\r\n    const filterItems = (searchQuery) => {\r\n        clearStructure();\r\n        if (!searchQuery || searchQuery.trim().length === '') {\r\n            setCurrentFolder(fileStructure);\r\n            return;\r\n        }\r\n        if (fuse) {\r\n            const q = searchQuery.trim();\r\n            const result = fuse.search(q);\r\n            if (result) {\r\n                const files = result.map(e => e.item);\r\n                const newStructure = {\r\n                    folderName: firstFolderName || fileStructure.folderName,\r\n                    files\r\n                }\r\n                setCurrentFolder(newStructure);\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (mediaFolderId) {\r\n            dispatch(getMediaCatalogData(mediaFolderId));\r\n        }\r\n    }, []);\r\n\r\n    const constructFlatFileArray = (obj) => {\r\n        let files = [];\r\n        if (obj) {\r\n            if (obj.files) {\r\n                obj.files.map((file, index) => {\r\n                    files.push({ ...file, parentName: obj.parentName });\r\n                });\r\n            }\r\n\r\n            if (obj.folderData) {\r\n                obj.folderData.map((folder, index) => {\r\n                    files = files.concat(constructFlatFileArray(folder));\r\n                });\r\n            }\r\n        }\r\n        return files;\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (fileStructure) {\r\n            setCurrentFolder(fileStructure);\r\n\r\n            if (fileStructure.folderName) {\r\n                // Set Breadcrumbs - start-folder\r\n                clearStructure();\r\n            }\r\n\r\n            // Is this needed?\r\n            const filesArray = constructFlatFileArray(fileStructure);\r\n\r\n            // Fuzzy search\r\n            setFuse(new Fuse(filesArray, {\r\n                keys: [\r\n                    'name',\r\n                    'extension',\r\n                ],\r\n                threshold: 0.3,\r\n                distance: 10,\r\n            }));\r\n        }\r\n    }, [fileStructure]);\r\n    return (\r\n        <div className=\"media-catalog\">\r\n            <div className=\"row text--center media-catalog__header\">\r\n                <section className=\"small-12 columns\"><Search filterItems={filterItems} /></section>\r\n                <section className=\"small-12 columns\"><Breadcrumbs currentStructure={currentStructure} breadcrumbClick={breadcrumbClick} /></section>\r\n            </div>\r\n            {currentFolder.folderData &&\r\n                <div className=\"media-catalog__folder-data-container\">\r\n                    <div className={`row media-catalog__folder-data align-center ${useAlternativeFolderView ? 'small-up-2 medium-up-4 large-up-6' : ''}`}>\r\n                        {\r\n                            currentFolder.folderData && currentFolder.folderData.length > 0 && currentFolder.folderData.map((folder, index) => {\r\n                                if (!useAlternativeFolderView)\r\n                                    return (\r\n                                        <div className=\"column small-6 medium-1\" key={`media-folder__folder${index}`} onClick={() => { setCurrentFolder(folder), updateStructure(folder.folderName) }}>\r\n                                            <div className=\"media-catalog__icon-folder\">\r\n                                                <FolderIcon width=\"48\" height=\"48\" className=\"media-catalog__icon-folder-item media-catalog__icon-folder-item--closed\" alt={translate('addons.mediacatalog.button.folder')} />\r\n                                                <FolderOpenIcon width=\"48\" height=\"48\" className=\"media-catalog__icon-folder-item media-catalog__icon-folder-item--open\" alt={translate('addons.mediacatalog.button.folderopen')} />\r\n                                             </div>\r\n                                            <div className=\"media-catalog__icon-folder-text\">{folder.folderName}</div>\r\n                                        </div>\r\n                                    );\r\n                                return (\r\n                                    <div className=\"column\" key={`media-folder__folder${index}`}>\r\n                                        <div>\r\n                                            <div className={`pn-card`} onClick={() => { setCurrentFolder(folder), updateStructure(folder.folderName) }}>\r\n                                                <div className=\"media-catalog__folder-data-item\">\r\n                                                    {folder.folderName}\r\n                                                </div>\r\n                                                <div className=\"media-catalog__folder-text\">Folder</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            }\r\n            {fileStructure.files &&\r\n                <section className={`${viewType}-view`}>\r\n                    <div className=\"row\">\r\n                        <h2 className=\"column text--center media-catalog__folder-heading\">\r\n                            <div className=\"media-catalog__view-toggler\"><span className={`media-catalog__view-toggler-grid ${viewType === 'grid' ? 'media-catalog__view-toggler-grid--active' : ''}`} onClick={() => setViewType('grid')}></span><span className={`media-catalog__view-toggler-list ${viewType === 'list' ? 'media-catalog__view-toggler-list--active' : ''}`} onClick={() => setViewType('list')}></span></div>\r\n                            {\r\n                                currentStructure && currentStructure.length > 1 &&\r\n                                <span className=\"media-catalog__folder-back-link\" onClick={() => breadcrumbClick(currentStructure[currentStructure.length - 2])}>{translate('addons.mediacatalog.button.stepoutoffolder')}</span>\r\n                            }\r\n                            Files in folder: <span>{currentStructure.length === 1 ? (firstFolderName || fileStructure.folderName) : currentFolder.folderName}</span></h2></div>\r\n\r\n                    {viewType === 'list' ?\r\n                        (<ListView currentFolder={currentFolder} allowedImageExtensions={allowedImageExtensions} formatFileSize={formatFileSize} />)\r\n                        :\r\n                        (<GridView currentFolder={currentFolder} allowedImageExtensions={allowedImageExtensions} formatFileSize={formatFileSize} />)\r\n                    }\r\n                </section>\r\n            }\r\n        </div>\r\n    );\r\n};\r\nexport default MediaCatalogContainer;\r\n"],"sourceRoot":""}